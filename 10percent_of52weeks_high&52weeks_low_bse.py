# -*- coding: utf-8 -*-
"""10%52wHigh&52wLow_BSE.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1C4-N9KyGCY5tsApVBdUhUM91h5xTyPyz
"""

import yfinance as yf

import yfinance as yf
import pandas as pd
import datetime

# Load the CSV file containing the stock list
stock_list_df = pd.read_csv('/content/Equity.csv')  # Replace with your actual file path

# Define the time period for fetching 52-week data (past 1 year)
end_date = datetime.datetime.now()
start_date = end_date - datetime.timedelta(days=365)

# List to store stocks that meet the criteria
filtered_stocks = []

# Iterate over each stock in the list
for index, row in stock_list_df.iterrows():
    security_id = row['Security Id']  # Using Security Id for yfinance ticker symbol
    ticker = f"{security_id}.BO"  # Construct the yfinance ticker

    try:
        # Fetch the stock data for the last 52 weeks
        stock_data = yf.download(ticker, start=start_date, end=end_date)

        # Ensure there is enough data to calculate 52-week high and low
        if len(stock_data) > 0:
            # Calculate 52-week high, low, and current closing price
            high_52w = stock_data['High'].max()
            low_52w = stock_data['Low'].min()
            last_close = stock_data['Close'].iloc[-1]

            # Check if the closing price is within 10% of the 52-week high and at 100% of the 52-week low
            if (last_close >= low_52w) and (last_close >= 0.9 * high_52w):
                filtered_stocks.append({
                    'Security Id': security_id,
                    'Last Close': last_close,
                    '52w High': high_52w,
                    '52w Low': low_52w
                })

    except Exception as e:
        print(f"Failed to fetch data for {security_id}: {e}")

# Convert the filtered list to a DataFrame
filtered_stocks_df = pd.DataFrame(filtered_stocks)

# Display the result
print(filtered_stocks_df)

# Optionally, save the filtered stocks to a CSV file
filtered_stocks_df.to_csv('10%52wHIgh_52wLOWbsestocks.csv', index=False)