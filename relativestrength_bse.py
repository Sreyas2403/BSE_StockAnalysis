# -*- coding: utf-8 -*-
"""RelativeStrength_BSE.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1U15hhuK6UXM4yZRd6vSBpy3IxdQX0PV7
"""

import yfinance as yf
import pandas as pd
import datetime

# Load the CSV file containing the stock list
stock_list_df = pd.read_csv('/content/Equity.csv')

# Define the time period (e.g., last 1 year for calculating RS)
end_date = datetime.datetime.now()
start_date = end_date - datetime.timedelta(days=365)

# Define a benchmark index (here i took S&P BSE Sensex for BSE benchmark)
benchmark_ticker = '^BSESN'

# Fetch benchmark index data
benchmark_data = yf.download(benchmark_ticker, start=start_date, end=end_date)
benchmark_returns = benchmark_data['Adj Close'].pct_change().dropna()

# List to store the RS values
rs_values = []

# Iterate over each stock in the list
for index, row in stock_list_df.iterrows():
    security_id = row['Security Id']  # Using Security Id for yfinance ticker symbol
    ticker = f"{security_id}.BO"  # Construct the yfinance ticker

    try:
        # Fetch the stock data
        stock_data = yf.download(ticker, start=start_date, end=end_date)
        stock_returns = stock_data['Adj Close'].pct_change().dropna()

        # Calculate the RS as the ratio of stock returns to benchmark returns
        rs = (stock_returns.mean() / benchmark_returns.mean())

        rs_values.append({
            'Security Id': security_id,
            'RS': rs
        })

    except Exception as e:
        print(f"Failed to fetch data for {security_id}: {e}")

# Convert the RS values list to a DataFrame using pandas
rs_df = pd.DataFrame(rs_values)

print(rs_df)

# saving the RS values to a CSV file
rs_df.to_csv('rs_bse_stocks.csv', index=False)