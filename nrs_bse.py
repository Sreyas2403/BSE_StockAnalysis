# -*- coding: utf-8 -*-
"""NRS_BSE

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1o3YwtG3AHAfn3kvlnj4dAzvs5aowNkIy
"""

import yfinance as yf
import pandas as pd
import datetime
from scipy.stats import percentileofscore

# Load the CSV file containing the stock list
stock_list_df = pd.read_csv('/content/Equity.csv')  # Replace with  file path in your device

# Define the time period (e.g., today and the same day last year)
end_date = datetime.datetime.now()
start_date = end_date - datetime.timedelta(days=365)

# Define the benchmark index (e.g., S&P BSE Sensex)
benchmark_ticker = '^BSESN'

# Fetch benchmark index data
benchmark_data = yf.download(benchmark_ticker, start=start_date, end=end_date)
sensex_closing_today = benchmark_data['Adj Close'].iloc[-1]
sensex_closing_1year_ago = benchmark_data['Adj Close'].iloc[0]

# Calculate the change in SENSEX
sensex_change = sensex_closing_today - sensex_closing_1year_ago

# List to store the NRS values and percentiles
nrs_values = []

# Iterate over each stock in the list
for index, row in stock_list_df.iterrows():
    security_id = row['Security Id']  # Using Security Id for yfinance ticker symbol
    ticker = f"{security_id}.BO"  # Construct the yfinance ticker

    try:
        # Fetch stock data
        stock_data = yf.download(ticker, start=start_date, end=end_date)
        stock_closing_today = stock_data['Adj Close'].iloc[-1]
        stock_closing_1year_ago = stock_data['Adj Close'].iloc[0]

        # Calculate NRS for the stock
        stock_change = stock_closing_today - stock_closing_1year_ago
        nrs = stock_change / sensex_change

        nrs_values.append({
            'Security Id': security_id,
            'Security Code': row['Security Code'],
            'NRS': nrs
        })

    except Exception as e:
        print(f"Failed to fetch data for {security_id}: {e}")

# Convert the NRS values list to a DataFrame
nrs_df = pd.DataFrame(nrs_values)

# Calculate the percentile for each stock based on NRS
nrs_df['Percentile'] = nrs_df['NRS'].apply(lambda x: percentileofscore(nrs_df['NRS'], x))

print(nrs_df)

# saving the NRS values and percentiles to a CSV file
nrs_df.to_csv('nrs_bse_stocks.csv', index=False)