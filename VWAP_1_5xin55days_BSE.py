# -*- coding: utf-8 -*-
"""VWAP_1.5xin55days._BSEipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dppM1lc0NZlYKHuccXUJHtdvUmn4TCO2
"""

import yfinance as yf
import pandas as pd

# Load the CSV file containing the stock list
stock_list_df = pd.read_csv('/content/Equity.csv')  # Replace with your actual file path

# Define the period for 55 trading days
period = 55
results = []

def calculate_vwap(data):
    vwap = (data['Adj Close'] * data['Volume']).sum() / data['Volume'].sum()
    return vwap

# Iterate over each stock in the list
for index, row in stock_list_df.iterrows():
    security_id = row['Security Id']
    ticker = f"{security_id}.BO"

    try:
        # Fetch historical data for the last 55 trading days
        stock_data = yf.download(ticker, period='3mo')  # Fetching 70 days to ensure we have 55 trading days
        if len(stock_data) < period:
            continue

        # Calculate VWAP for the most recent 55 trading days
        recent_data = stock_data[-period:]
        vwap_recent = calculate_vwap(recent_data)

        # Calculate VWAP for the earlier period (first 55 trading days)
        previous_data = stock_data[-(2*period):-period]
        vwap_previous = calculate_vwap(previous_data)

        # Check if the VWAP has increased by 1.5 times
        if vwap_recent >= 1.5 * vwap_previous:
            results.append({
                'Security Id': security_id,
                'Security Code': row['Security Code'],
                'Recent VWAP': vwap_recent,
                'Previous VWAP': vwap_previous
            })

    except Exception as e:
        print(f"Failed to fetch data for {security_id}: {e}")

# Convert the results to a DataFrame
results_df = pd.DataFrame(results)

# Display the results
print(results_df)

# Optionally, save the results to a CSV file
results_df.to_csv('vwap_increase_stocks.csv', index=False)